% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network_inference.R
\name{calculate_correlation_matrix}
\alias{calculate_correlation_matrix}
\title{Infer correlation matrix from gene expression table by using mutual information.}
\usage{
calculate_correlation_matrix(
  gx_table,
  iMethods,
  iEst,
  iDisc,
  ncores = 2,
  debug_output = FALSE,
  updateProgress = NULL
)
}
\arguments{
\item{gx_table}{Gene expression table as a data frame.}

\item{iMethods}{Vector of valid inference algorithms for MINET package.}

\item{iEst}{Vector of valid correlation methods for MINET package.}

\item{iDisc}{Vector of valid discretization methods for MINET package.}

\item{ncores}{Number of cores for running instances of MINET in parallel default:2.}

\item{debug_output}{Print help and status messages to help debug the running of the function default:FALSE.}

\item{updateProgress}{Shiny application can request for update of progress from this function default:NULL.}
}
\value{
A binary symmetrix matrix representing the median of mutual information correlation computed across various MINET combinations
}
\description{
calculate_correlation_matrix uses the MINET package to create correlation matrix by mutual information method. User can specify
the inference algorithms, correlation calculation methods and discretization methods to create mutiple combinations of parameters
for multiple runs of minet(). Multiple inferences are unified by taking median to create a consensus matrix.
}
\examples{
\dontrun{
calculate_correlation_matrix(gx_table=gene_expression.df,
iMethods=c("clr","aracne","mrnet","mrnetb"),
iEst=c("pearson","spearman","kendall","mi.empirical","mi.mm","mi.shrink","mi.sg"),
iDisc=c("none","equalfreq","equalwidth","globalequalwidth"),
ncores=12,
debug_output=TRUE
)
}
}
\keyword{internal}
